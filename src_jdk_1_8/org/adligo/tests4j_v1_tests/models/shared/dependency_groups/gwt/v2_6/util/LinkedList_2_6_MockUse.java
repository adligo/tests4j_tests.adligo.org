package org.adligo.tests4j_v1_tests.models.shared.dependency_groups.gwt.v2_6.util;

import java.util.ArrayList;
import java.util.LinkedList;

/** autogenerated by org.adligo.tests4j.gen.dependency_groups.ClassUseGen*/
@SuppressWarnings({"rawtypes","unchecked"})
public class LinkedList_2_6_MockUse {

	
	public LinkedList obj = null;
	public LinkedList_2_6_MockUse() {
		obj = new LinkedList();
		obj = new LinkedList(
			new ArrayList());
		callLinkedListMethods();
		callObjectMethods();
		callAbstractCollectionMethods();
		callAbstractListMethods();
		callAbstractSequentialListMethods();
	}

	public void callLinkedListMethods() {
		obj.add(new Object());
		obj.get(0);
		obj.getFirst();
		obj.getLast();
		obj.peek();
		obj.poll();
		obj.add(new Object());
		obj.remove();
		obj.add(new Object());
		obj.removeFirst();
		obj.add(new Object());
		obj.removeLast();
		obj.add(new Object());
		obj.add(new Object());
		obj.listIterator(1);
		obj.addFirst(new Object());
		obj.addLast(new Object());
		obj.clone();
	}

	public void callAbstractListMethods() {
		obj.add(new Object());
		obj.addAll(0, new ArrayList());
		obj.equals(new Object());
		obj.hashCode();
		obj.indexOf(new Object());
		obj.lastIndexOf(new Object());
		obj.get(0);
		obj.remove(0);
		obj.add(new Object());
		obj.set(0, new Object());
		obj.iterator();
		obj.subList(0, 1);
		obj.listIterator();
		obj.listIterator(1);
		obj.add(1, new Object());
		obj.clear();
	}
	public void callObjectMethods() {
		obj.equals(new Object());
		obj.hashCode();
		obj.getClass();
		obj.toString();
	}
	public void callAbstractCollectionMethods() {
		obj.toArray();
		obj.toArray(new Object[] {});
		obj.add(new Object());
		obj.addAll(new ArrayList());
		obj.contains(new Object());
		obj.containsAll(new ArrayList());
		obj.isEmpty();
		obj.remove(new Object());
		obj.removeAll(new ArrayList());
		obj.retainAll(new ArrayList());
		obj.size();
		obj.iterator();
		obj.clear();
	}
	
	public void callAbstractSequentialListMethods() {
		ArrayList al = new ArrayList();
		al.add(new Object());
		al.add(new Object());
		al.add(new Object());
		obj.add(new Object());
		obj.add(new Object());
		obj.add(new Object());
		obj.addAll(2, al);
		obj.get(2);
		obj.remove(2);
		obj.set(2, new Object());
		obj.iterator();
		obj.listIterator(2);
		obj.add(2, new Object());
	}
}
