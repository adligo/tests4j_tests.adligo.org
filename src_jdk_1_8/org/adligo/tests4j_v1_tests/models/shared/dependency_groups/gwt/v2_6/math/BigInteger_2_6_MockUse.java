package org.adligo.tests4j_v1_tests.models.shared.dependency_groups.gwt.v2_6.math;

import java.math.BigInteger;
import java.util.Random;

/** autogenerated by org.adligo.tests4j.gen.dependency_groups.ClassUseGen*/
public class BigInteger_2_6_MockUse {

	public BigInteger obj = null;
	public java.math.BigInteger obj0 = BigInteger.ONE;
	public java.math.BigInteger obj1 = BigInteger.TEN;
	public java.math.BigInteger obj2 = BigInteger.ZERO;
	public BigInteger_2_6_MockUse() {
		obj = new BigInteger(
			new BigInteger("13").toByteArray());
		obj = new BigInteger(
			1, new BigInteger("13").toByteArray());
		obj = new BigInteger(
			2, 2, new Random());
		obj = new BigInteger(
			2, new Random());
		obj = new BigInteger(
			"13");
		obj = new BigInteger(
			"13", 10);
		callBigIntegerMethods();
		callObjectMethods();
		callNumberMethods();
	}

	public void callBigIntegerMethods() {
		obj.toByteArray();
		obj.divideAndRemainder(new BigInteger("1"));
		obj.equals(new Object());
		obj.isProbablePrime(2);
		obj.testBit(2);
		obj.doubleValue();
		obj.floatValue();
		obj.bitCount();
		obj.bitLength();
		obj.compareTo(new BigInteger("1"));
		obj.getLowestSetBit();
		obj.hashCode();
		obj.intValue();
		obj.signum();
		obj.toString();
		obj.toString(2);
		obj.abs();
		obj.add(new BigInteger("1"));
		obj.and(new BigInteger("1"));
		obj.andNot(new BigInteger("1"));
		obj.clearBit(2);
		obj.divide(new BigInteger("1"));
		obj.flipBit(2);
		obj.gcd(new BigInteger("1"));
		obj.max(new BigInteger("1"));
		obj.min(new BigInteger("1"));
		obj.mod(new BigInteger("1"));
		obj.modInverse(new BigInteger("1"));
		obj.modPow(new BigInteger("1"), new BigInteger("1"));
		obj.multiply(new BigInteger("1"));
		obj.negate();
		obj.nextProbablePrime();
		obj.not();
		obj.or(new BigInteger("1"));
		obj.pow(2);
		obj.probablePrime(2, new Random());
		obj.remainder(new BigInteger("1"));
		obj.setBit(2);
		obj.shiftLeft(2);
		obj.shiftRight(2);
		obj.subtract(new BigInteger("1"));
		obj.valueOf(3L);
		obj.xor(new BigInteger("1"));
		obj.longValue();
	}
	public void callObjectMethods() {
		obj.equals(new Object());
		obj.hashCode();
		obj.getClass();
		obj.toString();
	}
	public void callNumberMethods() {
		obj.byteValue();
		obj.doubleValue();
		obj.floatValue();
		obj.intValue();
		obj.longValue();
		obj.shortValue();
	}
}
